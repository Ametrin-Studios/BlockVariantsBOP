package com.ametrin.block_variants.bop.registry;

import biomesoplenty.api.block.BOPBlocks;
import biomesoplenty.api.block.BOPWoodTypes;
import com.ametrin.block_variants.bop.BlockVariantsBOPIntegration;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.neoforged.neoforge.registries.DeferredBlock;
import net.neoforged.neoforge.registries.DeferredRegister;

import java.util.function.Function;
import java.util.function.Supplier;
import java.util.stream.Stream;

public final class BBWoodBlocks {
    public static final DeferredRegister.Blocks REGISTER = DeferredRegister.createBlocks(BlockVariantsBOPIntegration.MOD_ID);

    // FIR, PINE, MAPLE, REDWOOD, MAHOGANY, JACARANDA, PALM, WILLOW, DEAD, MAGIC, UMBRAN, HELLBARK, EMPYREAL
    // use oak wood as property base because fir has not been loaded yet and logs have an incompatible color map

    // FIR
    public static final DeferredBlock<StairBlock> FIR_LOG_STAIRS = register("fir_log_stairs", properties -> new StairBlock(BOPBlocks.FIR_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.FIR_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> FIR_LOG_SLAB = register("fir_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.FIR_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_FIR_LOG_STAIRS = register("stripped_fir_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_FIR_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_FIR_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_FIR_LOG_SLAB = register("stripped_fir_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_FIR_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> FIR_WOOD_STAIRS = register("fir_wood_stairs", properties -> new StairBlock(BOPBlocks.FIR_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> FIR_WOOD_SLAB = register("fir_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> FIR_WOOD_WALL = register("fir_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> FIR_WOOD_FENCE = register("fir_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> FIR_WOOD_FENCE_GATE = register("fir_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.FIR, properties.mapColor(BOPBlocks.FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_FIR_WOOD_STAIRS = register("stripped_fir_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_FIR_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_FIR_WOOD_SLAB = register("stripped_fir_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_FIR_WOOD_WALL = register("stripped_fir_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_FIR_WOOD_FENCE = register("stripped_fir_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_FIR_WOOD_FENCE_GATE = register("stripped_fir_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.FIR, properties.mapColor(BOPBlocks.STRIPPED_FIR_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // PINE
    public static final DeferredBlock<StairBlock> PINE_LOG_STAIRS = register("pine_log_stairs", properties -> new StairBlock(BOPBlocks.PINE_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.PINE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> PINE_LOG_SLAB = register("pine_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.PINE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_PINE_LOG_STAIRS = register("stripped_pine_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_PINE_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_PINE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_PINE_LOG_SLAB = register("stripped_pine_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_PINE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> PINE_WOOD_STAIRS = register("pine_wood_stairs", properties -> new StairBlock(BOPBlocks.PINE_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> PINE_WOOD_SLAB = register("pine_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> PINE_WOOD_WALL = register("pine_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> PINE_WOOD_FENCE = register("pine_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> PINE_WOOD_FENCE_GATE = register("pine_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.PINE, properties.mapColor(BOPBlocks.PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_PINE_WOOD_STAIRS = register("stripped_pine_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_PINE_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_PINE_WOOD_SLAB = register("stripped_pine_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_PINE_WOOD_WALL = register("stripped_pine_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_PINE_WOOD_FENCE = register("stripped_pine_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_PINE_WOOD_FENCE_GATE = register("stripped_pine_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.PINE, properties.mapColor(BOPBlocks.STRIPPED_PINE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // MAPLE
    public static final DeferredBlock<StairBlock> MAPLE_LOG_STAIRS = register("maple_log_stairs", properties -> new StairBlock(BOPBlocks.MAPLE_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.MAPLE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> MAPLE_LOG_SLAB = register("maple_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.MAPLE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_MAPLE_LOG_STAIRS = register("stripped_maple_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_MAPLE_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_MAPLE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_MAPLE_LOG_SLAB = register("stripped_maple_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_MAPLE_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> MAPLE_WOOD_STAIRS = register("maple_wood_stairs", properties -> new StairBlock(BOPBlocks.MAPLE_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> MAPLE_WOOD_SLAB = register("maple_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> MAPLE_WOOD_WALL = register("maple_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> MAPLE_WOOD_FENCE = register("maple_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> MAPLE_WOOD_FENCE_GATE = register("maple_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.MAPLE, properties.mapColor(BOPBlocks.MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_MAPLE_WOOD_STAIRS = register("stripped_maple_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_MAPLE_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_MAPLE_WOOD_SLAB = register("stripped_maple_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_MAPLE_WOOD_WALL = register("stripped_maple_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_MAPLE_WOOD_FENCE = register("stripped_maple_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_MAPLE_WOOD_FENCE_GATE = register("stripped_maple_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.MAPLE, properties.mapColor(BOPBlocks.STRIPPED_MAPLE_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // REDWOOD
    public static final DeferredBlock<StairBlock> REDWOOD_LOG_STAIRS = register("redwood_log_stairs", properties -> new StairBlock(BOPBlocks.REDWOOD_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.REDWOOD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> REDWOOD_LOG_SLAB = register("redwood_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.REDWOOD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_REDWOOD_LOG_STAIRS = register("stripped_redwood_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_REDWOOD_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_REDWOOD_LOG_SLAB = register("stripped_redwood_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> REDWOOD_WOOD_STAIRS = register("redwood_wood_stairs", properties -> new StairBlock(BOPBlocks.REDWOOD_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> REDWOOD_WOOD_SLAB = register("redwood_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> REDWOOD_WOOD_WALL = register("redwood_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> REDWOOD_WOOD_FENCE = register("redwood_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> REDWOOD_WOOD_FENCE_GATE = register("redwood_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.REDWOOD, properties.mapColor(BOPBlocks.REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_REDWOOD_WOOD_STAIRS = register("stripped_redwood_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_REDWOOD_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_REDWOOD_WOOD_SLAB = register("stripped_redwood_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_REDWOOD_WOOD_WALL = register("stripped_redwood_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_REDWOOD_WOOD_FENCE = register("stripped_redwood_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_REDWOOD_WOOD_FENCE_GATE = register("stripped_redwood_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.REDWOOD, properties.mapColor(BOPBlocks.STRIPPED_REDWOOD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // MAHOGANY
    public static final DeferredBlock<StairBlock> MAHOGANY_LOG_STAIRS = register("mahogany_log_stairs", properties -> new StairBlock(BOPBlocks.MAHOGANY_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.MAHOGANY_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> MAHOGANY_LOG_SLAB = register("mahogany_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.MAHOGANY_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_MAHOGANY_LOG_STAIRS = register("stripped_mahogany_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_MAHOGANY_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_MAHOGANY_LOG_SLAB = register("stripped_mahogany_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> MAHOGANY_WOOD_STAIRS = register("mahogany_wood_stairs", properties -> new StairBlock(BOPBlocks.MAHOGANY_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> MAHOGANY_WOOD_SLAB = register("mahogany_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> MAHOGANY_WOOD_WALL = register("mahogany_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> MAHOGANY_WOOD_FENCE = register("mahogany_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> MAHOGANY_WOOD_FENCE_GATE = register("mahogany_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.MAHOGANY, properties.mapColor(BOPBlocks.MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_MAHOGANY_WOOD_STAIRS = register("stripped_mahogany_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_MAHOGANY_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_MAHOGANY_WOOD_SLAB = register("stripped_mahogany_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_MAHOGANY_WOOD_WALL = register("stripped_mahogany_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_MAHOGANY_WOOD_FENCE = register("stripped_mahogany_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_MAHOGANY_WOOD_FENCE_GATE = register("stripped_mahogany_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.MAHOGANY, properties.mapColor(BOPBlocks.STRIPPED_MAHOGANY_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // JACARANDA
    public static final DeferredBlock<StairBlock> JACARANDA_LOG_STAIRS = register("jacaranda_log_stairs", properties -> new StairBlock(BOPBlocks.JACARANDA_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.JACARANDA_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> JACARANDA_LOG_SLAB = register("jacaranda_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.JACARANDA_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_JACARANDA_LOG_STAIRS = register("stripped_jacaranda_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_JACARANDA_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_JACARANDA_LOG_SLAB = register("stripped_jacaranda_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> JACARANDA_WOOD_STAIRS = register("jacaranda_wood_stairs", properties -> new StairBlock(BOPBlocks.JACARANDA_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> JACARANDA_WOOD_SLAB = register("jacaranda_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> JACARANDA_WOOD_WALL = register("jacaranda_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> JACARANDA_WOOD_FENCE = register("jacaranda_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> JACARANDA_WOOD_FENCE_GATE = register("jacaranda_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.JACARANDA, properties.mapColor(BOPBlocks.JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_JACARANDA_WOOD_STAIRS = register("stripped_jacaranda_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_JACARANDA_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_JACARANDA_WOOD_SLAB = register("stripped_jacaranda_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_JACARANDA_WOOD_WALL = register("stripped_jacaranda_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_JACARANDA_WOOD_FENCE = register("stripped_jacaranda_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_JACARANDA_WOOD_FENCE_GATE = register("stripped_jacaranda_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.JACARANDA, properties.mapColor(BOPBlocks.STRIPPED_JACARANDA_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // PALM
    public static final DeferredBlock<StairBlock> PALM_LOG_STAIRS = register("palm_log_stairs", properties -> new StairBlock(BOPBlocks.PALM_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.PALM_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> PALM_LOG_SLAB = register("palm_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.PALM_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_PALM_LOG_STAIRS = register("stripped_palm_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_PALM_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_PALM_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_PALM_LOG_SLAB = register("stripped_palm_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_PALM_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> PALM_WOOD_STAIRS = register("palm_wood_stairs", properties -> new StairBlock(BOPBlocks.PALM_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> PALM_WOOD_SLAB = register("palm_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> PALM_WOOD_WALL = register("palm_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> PALM_WOOD_FENCE = register("palm_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> PALM_WOOD_FENCE_GATE = register("palm_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.PALM, properties.mapColor(BOPBlocks.PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_PALM_WOOD_STAIRS = register("stripped_palm_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_PALM_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_PALM_WOOD_SLAB = register("stripped_palm_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_PALM_WOOD_WALL = register("stripped_palm_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_PALM_WOOD_FENCE = register("stripped_palm_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_PALM_WOOD_FENCE_GATE = register("stripped_palm_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.PALM, properties.mapColor(BOPBlocks.STRIPPED_PALM_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // WILLOW
    public static final DeferredBlock<StairBlock> WILLOW_LOG_STAIRS = register("willow_log_stairs", properties -> new StairBlock(BOPBlocks.WILLOW_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.WILLOW_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> WILLOW_LOG_SLAB = register("willow_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.WILLOW_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_WILLOW_LOG_STAIRS = register("stripped_willow_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_WILLOW_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_WILLOW_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_WILLOW_LOG_SLAB = register("stripped_willow_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_WILLOW_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> WILLOW_WOOD_STAIRS = register("willow_wood_stairs", properties -> new StairBlock(BOPBlocks.WILLOW_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> WILLOW_WOOD_SLAB = register("willow_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> WILLOW_WOOD_WALL = register("willow_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> WILLOW_WOOD_FENCE = register("willow_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> WILLOW_WOOD_FENCE_GATE = register("willow_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.WILLOW, properties.mapColor(BOPBlocks.WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_WILLOW_WOOD_STAIRS = register("stripped_willow_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_WILLOW_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_WILLOW_WOOD_SLAB = register("stripped_willow_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_WILLOW_WOOD_WALL = register("stripped_willow_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_WILLOW_WOOD_FENCE = register("stripped_willow_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_WILLOW_WOOD_FENCE_GATE = register("stripped_willow_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.WILLOW, properties.mapColor(BOPBlocks.STRIPPED_WILLOW_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // DEAD
    public static final DeferredBlock<StairBlock> DEAD_LOG_STAIRS = register("dead_log_stairs", properties -> new StairBlock(BOPBlocks.DEAD_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.DEAD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> DEAD_LOG_SLAB = register("dead_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.DEAD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_DEAD_LOG_STAIRS = register("stripped_dead_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_DEAD_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_DEAD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_DEAD_LOG_SLAB = register("stripped_dead_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_DEAD_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> DEAD_WOOD_STAIRS = register("dead_wood_stairs", properties -> new StairBlock(BOPBlocks.DEAD_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> DEAD_WOOD_SLAB = register("dead_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> DEAD_WOOD_WALL = register("dead_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> DEAD_WOOD_FENCE = register("dead_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> DEAD_WOOD_FENCE_GATE = register("dead_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.DEAD, properties.mapColor(BOPBlocks.DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_DEAD_WOOD_STAIRS = register("stripped_dead_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_DEAD_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_DEAD_WOOD_SLAB = register("stripped_dead_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_DEAD_WOOD_WALL = register("stripped_dead_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_DEAD_WOOD_FENCE = register("stripped_dead_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_DEAD_WOOD_FENCE_GATE = register("stripped_dead_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.DEAD, properties.mapColor(BOPBlocks.STRIPPED_DEAD_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // MAGIC
    public static final DeferredBlock<StairBlock> MAGIC_LOG_STAIRS = register("magic_log_stairs", properties -> new StairBlock(BOPBlocks.MAGIC_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.MAGIC_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> MAGIC_LOG_SLAB = register("magic_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.MAGIC_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_MAGIC_LOG_STAIRS = register("stripped_magic_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_MAGIC_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_MAGIC_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_MAGIC_LOG_SLAB = register("stripped_magic_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_MAGIC_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> MAGIC_WOOD_STAIRS = register("magic_wood_stairs", properties -> new StairBlock(BOPBlocks.MAGIC_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> MAGIC_WOOD_SLAB = register("magic_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> MAGIC_WOOD_WALL = register("magic_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> MAGIC_WOOD_FENCE = register("magic_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> MAGIC_WOOD_FENCE_GATE = register("magic_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.MAGIC, properties.mapColor(BOPBlocks.MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_MAGIC_WOOD_STAIRS = register("stripped_magic_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_MAGIC_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_MAGIC_WOOD_SLAB = register("stripped_magic_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_MAGIC_WOOD_WALL = register("stripped_magic_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_MAGIC_WOOD_FENCE = register("stripped_magic_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_MAGIC_WOOD_FENCE_GATE = register("stripped_magic_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.MAGIC, properties.mapColor(BOPBlocks.STRIPPED_MAGIC_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // UMBRAN
    public static final DeferredBlock<StairBlock> UMBRAN_LOG_STAIRS = register("umbran_log_stairs", properties -> new StairBlock(BOPBlocks.UMBRAN_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.UMBRAN_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> UMBRAN_LOG_SLAB = register("umbran_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.UMBRAN_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_UMBRAN_LOG_STAIRS = register("stripped_umbran_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_UMBRAN_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_UMBRAN_LOG_SLAB = register("stripped_umbran_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> UMBRAN_WOOD_STAIRS = register("umbran_wood_stairs", properties -> new StairBlock(BOPBlocks.UMBRAN_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> UMBRAN_WOOD_SLAB = register("umbran_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> UMBRAN_WOOD_WALL = register("umbran_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> UMBRAN_WOOD_FENCE = register("umbran_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> UMBRAN_WOOD_FENCE_GATE = register("umbran_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.UMBRAN, properties.mapColor(BOPBlocks.UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_UMBRAN_WOOD_STAIRS = register("stripped_umbran_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_UMBRAN_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_UMBRAN_WOOD_SLAB = register("stripped_umbran_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_UMBRAN_WOOD_WALL = register("stripped_umbran_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_UMBRAN_WOOD_FENCE = register("stripped_umbran_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_UMBRAN_WOOD_FENCE_GATE = register("stripped_umbran_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.UMBRAN, properties.mapColor(BOPBlocks.STRIPPED_UMBRAN_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // HELLBARK
    public static final DeferredBlock<StairBlock> HELLBARK_LOG_STAIRS = register("hellbark_log_stairs", properties -> new StairBlock(BOPBlocks.HELLBARK_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.HELLBARK_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> HELLBARK_LOG_SLAB = register("hellbark_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.HELLBARK_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_HELLBARK_LOG_STAIRS = register("stripped_hellbark_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_HELLBARK_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_HELLBARK_LOG_SLAB = register("stripped_hellbark_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> HELLBARK_WOOD_STAIRS = register("hellbark_wood_stairs", properties -> new StairBlock(BOPBlocks.HELLBARK_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> HELLBARK_WOOD_SLAB = register("hellbark_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> HELLBARK_WOOD_WALL = register("hellbark_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> HELLBARK_WOOD_FENCE = register("hellbark_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> HELLBARK_WOOD_FENCE_GATE = register("hellbark_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.HELLBARK, properties.mapColor(BOPBlocks.HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_HELLBARK_WOOD_STAIRS = register("stripped_hellbark_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_HELLBARK_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_HELLBARK_WOOD_SLAB = register("stripped_hellbark_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_HELLBARK_WOOD_WALL = register("stripped_hellbark_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_HELLBARK_WOOD_FENCE = register("stripped_hellbark_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_HELLBARK_WOOD_FENCE_GATE = register("stripped_hellbark_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.HELLBARK, properties.mapColor(BOPBlocks.STRIPPED_HELLBARK_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    // EMPYREAL
    public static final DeferredBlock<StairBlock> EMPYREAL_LOG_STAIRS = register("empyreal_log_stairs", properties -> new StairBlock(BOPBlocks.EMPYREAL_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.EMPYREAL_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> EMPYREAL_LOG_SLAB = register("empyreal_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.EMPYREAL_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_EMPYREAL_LOG_STAIRS = register("stripped_empyreal_log_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_EMPYREAL_LOG.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_EMPYREAL_LOG_SLAB = register("stripped_empyreal_log_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_LOG.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<StairBlock> EMPYREAL_WOOD_STAIRS = register("empyreal_wood_stairs", properties -> new StairBlock(BOPBlocks.EMPYREAL_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<SlabBlock> EMPYREAL_WOOD_SLAB = register("empyreal_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<WallBlock> EMPYREAL_WOOD_WALL = register("empyreal_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceBlock> EMPYREAL_WOOD_FENCE = register("empyreal_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> EMPYREAL_WOOD_FENCE_GATE = register("empyreal_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.EMPYREAL, properties.mapColor(BOPBlocks.EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_WOOD));
    public static final DeferredBlock<StairBlock> STRIPPED_EMPYREAL_WOOD_STAIRS = register("stripped_empyreal_wood_stairs", properties -> new StairBlock(BOPBlocks.STRIPPED_EMPYREAL_WOOD.defaultBlockState(), properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<SlabBlock> STRIPPED_EMPYREAL_WOOD_SLAB = register("stripped_empyreal_wood_slab", properties -> new SlabBlock(properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<WallBlock> STRIPPED_EMPYREAL_WOOD_WALL = register("stripped_empyreal_wood_wall", properties -> new WallBlock(properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceBlock> STRIPPED_EMPYREAL_WOOD_FENCE = register("stripped_empyreal_wood_fence", properties -> new FenceBlock(properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
    public static final DeferredBlock<FenceGateBlock> STRIPPED_EMPYREAL_WOOD_FENCE_GATE = register("stripped_empyreal_wood_fence_gate", properties -> new FenceGateBlock(BOPWoodTypes.EMPYREAL, properties.mapColor(BOPBlocks.STRIPPED_EMPYREAL_WOOD.defaultMapColor())), BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));

    private static <T extends Block> DeferredBlock<T> register(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties) {
        return register(name, block, properties, new Item.Properties());
    }

    private static <T extends Block> DeferredBlock<T> register(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties, Item.Properties itemProperties) {
        var registryObject = registerWithoutItem(name, block, properties);
        BBItems.REGISTER.registerItem(name, iproperties -> new BlockItem(registryObject.get(), iproperties), itemProperties);
        return registryObject;
    }

    private static <T extends Block> DeferredBlock<T> registerWithoutItem(String name, Function<BlockBehaviour.Properties, T> block, BlockBehaviour.Properties properties) {
        return REGISTER.registerBlock(name, block, properties);
    }

    public static Stream<Block> getAllWoodBlocks() {
        return REGISTER.getEntries().stream().map(Supplier::get);
    }
}
